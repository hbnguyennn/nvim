{
  "if": {
    "prefix": "__if_with_comment",
    "body": ["if (${1})\nbegin", "\n   ${0}", "\nend // (${1})"],
    "description": "If statement"
  },

  "if_non_comemt": {
    "prefix": "__if",
    "body": ["if (${1})\nbegin", "   ${0}", "\nend"],
    "description": "If statement"
  },
  "if-else": {
    "prefix": "__ife",
    "body": [
      "if (${1})\nbegin",
      "\n\t${2}",
      "\nend",
      "\nelse begin",
      "\n\t${3}",
      "\nend"
    ],
    "description": "If-else statement"
  },
  "else-if": {
    "prefix": "__eif",
    "body": ["else if (${1})\nbegin", "\t${0}", "end"],
    "description": "else-if statement"
  },
  "else": {
    "prefix": "__el",
    "body": ["else\nbegin", "\t${0}", "end"],
    "description": "else-if statement"
  },
  "while": {
    "prefix": "__while",
    "body": ["whlie (${1})\nbegin\n\t${0}\nend"],
    "description": "While loop"
  },
  "repeat loop": {
    "prefix": "repeat (${1}) begin",
    "body": ["repeat (${1}) begin\n\t${0}\nend"],
    "description": "Repeat loop"
  },
  "case statement": {
    "prefix": "case",
    "body": [
      "case (${1:variable})\n\t${2: value}: begin\n\t\t${3}\n\tend\ndefault: begin\n\t${4}\n",
      "end",
      "endcase"
    ],
    "description": "Case Statement"
  },
  "casez statement": {
    "prefix": "casez",
    "body": [
      "casez (${1:variable})\n\t${2: value}: begin\n\t\t${3}\n\tend\ndefault: begin\n\t${4}\n",
      "end",
      "endcase"
    ],
    "description": "Casez Statement"
  },
  "always block": {
    "prefix": "al",
    "body": ["always @(${1:Sensitive list}) begin\n", "\t${0}", "\nend"],
    "description": "Always block"
  },
  "module block": {
    "prefix": "mod",
    "body": ["module ${1:FILENAME} (${2})", "\n\t${0}", "\nendmodule : ${1}"],
    "description": "Module Block"
  },
  "for": {
    "prefix": "for",
    "body": [
      "for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) begin",
      "\n\t${4}",
      "\nend"
    ],
    "description": "For loop"
  },
  "forever": {
    "prefix": "forev",
    "body": ["forever\nbegin\n\t${0}\nend"],
    "description": "Forever loop"
  },
  "function": {
    "prefix": "fun",
    "body": [
      "function ${1:void} ${2:name}(${3});",
      "\n\t${0}",
      "endfunction: $2"
    ],
    "description": "Function snippet"
  },
  "task": {
    "prefix": "task",
    "body": ["task ${1:name}(${2});", "\n\t${0}", "\nendtask: $1"],
    "description": "Task snippet"
  },
  "Initial Begin": {
    "prefix": "ini",
    "body": ["initial begin\n\t${0}\nend"],
    "description": "Initial Begin"
  },
  "typedef struct packed": {
    "prefix": "tdsp",
    "body": ["typedef struct packed {", "\n\tint ${2:data};", "\n${1:name}"],
    "description": "Typedef struct packed"
  },
  "typedef enum": {
    "prefix": "tde",
    "body": [
      "typedef enum ${2:logic[15:0]} \n{",
      "\n${3:REG = 16'h0000}",
      "\n} ${1:my_dest_t};"
    ],
    "description": "Typedef enum"
  },

  "mytest": {
     "prefix":"__mytest",
     "body": [
        "THIS IS THE TEST\n{",
        "input_1${2:input1}\n",
        "input_2${3:input2}\n",
        "input_last${0:last}\n"
     ],
     "description": "TESTTT"
   },
   "begin-end": {
      "prefix":"__begin",
      "body" : [
         "begin",
         "  ${0}",
         "end"
      ],
      "description":"begin-end"
   },
   "function": {
      "prefix":"__function",
      "body" : [
         "function ${1:class}::${2:function_name}(${3:inout});",
         "  ${0}",
         "endfunction : ${2:function_name}"
      ],
      "description":"begin-end"
   }
}
